#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <physical_layouts.dtsi>
#include <dt-bindings/zmk/pointing.h>

&msc {
    delay-ms = <0>;
    trigger-period-ms = <10>;
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <0>;
};

/{
    behaviors {
        rot_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
            tap-ms = <10>;
        };

        uldr_move: move_up_left_down_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&ul_move>, <&dr_move>;
            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp A &kp B &kp A &kp B &kp A &kp B &kp A &kp B     &kp A &kp B &kp A &kp B &kp A &kp B &kp A &kp B &kp A 
            &kp B &kp A &kp B &kp A &kp B &kp A &kp B &kp A     &kp B &kp A &kp B &kp A &kp B &kp A &kp B       &kp B
            &kp A &kp B       &kp B &kp A &kp B &kp A &kp B     &kp A &kp B &kp A &kp B &kp A &kp B &kp A &kp B &kp A 
            &kp B &kp A       &kp A &kp B &kp A &kp B &kp A     &kp B &kp A &kp B &kp A &kp B &kp A &kp B       &kp B
            &kp A &kp B       &kp B &kp A &kp B &kp A &kp B     &kp A &kp B &kp A &kp B &kp A &kp B       &kp B
            &kp B       &kp B &kp A &kp B &kp A &kp B &kp A     &kp B &kp A                         &kp B &kp A &kp B
            >;
            
            sensor-bindings = <
                &inc_dec_kp LEFT_ARROW RIGHT_ARROW
                &inc_dec_kp UP_ARROW   DOWN_ARROW
                &inc_dec_kp LEFT_ARROW RIGHT_ARROW
                &inc_dec_kp UP_ARROW   DOWN_ARROW
            >;
        };
    };
};
